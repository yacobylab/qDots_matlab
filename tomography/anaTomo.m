function d = anaTomo(file, pulse, frames, scale, ypls, refind, ax)% d = anaTomo(file, pulse, frames, scale, ypls, refind)% % pulse: row vector with pulses numbers of first pulse in each series.% frames: frames to be averaged ([] = all valid).% scale: matrix with scaling factors, one rwo for each pulse series%       containing:%       - amplitude scale fac, %       - reference level to remain invariant (in bloch sphere coords), %       - time scale, %       - time offset%% ypls: pulse series (specified as index to pulse argument) to be used as Y%       coord. Default = 0, meaning none.% % arguments 3-6 are optional.global awgdata;    load(file, 'data', 'scan');data = data{1};if nargin < 3 || isempty(frames)    frames = 1:find(isfinite(data(:, end, end)), 1, 'last');endif nargin < 5    ypls = [];endcut = 10; % ignore data points before this one.nsamp = size(data, 3);if nargin < 6 || isempty(refind)    if any(scan.data.pulses == 9320)        refind = 4;    else        refind = 3;    endendswitch refind    % 1 pulse generation, 2,3: singlet (-1), 4-6 50-50 level (0)    case 0        reftab = [846 187 nan; [8825+(0:3)'*124, repmat([3138 nan], 4, 1)];...            [8824+(0:3)'*124; 8826+(0:3)'*124'; 8827+(0:3)'*124] , repmat([3138 187], 12, 1)];    case 2        reftab = [846 187 nan 867 nan nan; ...            [8825+(0:3)'*124, 8825+(0:3)'*124, nan(4, 4)]; ...            [8824+(0:3)'*124; 8826+(0:3)'*124'; 8827+(0:3)'*124] , ...            repmat([8825+(0:3)'*124, 187 * ones(4, 1)], 3, 1), ...            repmat([8824+(0:3)'*124, 8826+(0:3)'*124', 8827+(0:3)'*124], 3, 1)];        refpls = [187 3138 7467 896];            case 3        reftab = [846 187 nan 867 nan nan; ...            [8825+(0:3)'*124, 8825+(0:3)'*124, nan(4, 1), 8824+(0:3)'*124, 8826+(0:3)'*124', 8827+(0:3)'*124]; ...            [8824+(0:3)'*124; 8826+(0:3)'*124'; 8827+(0:3)'*124] , ...            repmat([8825+(0:3)'*124, 187 * ones(4, 1)], 3, 1), ...            repmat([8824+(0:3)'*124, 8826+(0:3)'*124', 8827+(0:3)'*124], 3, 1); ...            [[8825+(0:3)'*124, 8825+(0:3)'*124, nan(4, 1), 8824+(0:3)'*124, 8826+(0:3)'*124', 8827+(0:3)'*124]; ...            [8824+(0:3)'*124; 8826+(0:3)'*124'; 8827+(0:3)'*124] , ...            repmat([8825+(0:3)'*124, (187-498) * ones(4, 1)], 3, 1), ...            repmat([8824+(0:3)'*124, 8826+(0:3)'*124', 8827+(0:3)'*124], 3, 1)]+498];                            refpls = [187 3138 7467 896];        % 8825: 8825=X (S), 8824, 8826, 8827 = Z, Y1, Y2(0)        % 8824,6,7: 8825 = X, 187 (S), 8824, 8826, 8827 (0)    case 4        reftab = [846 187 nan 867 nan nan; ...            [8825+(0:3)'*124, 9320*ones(4, 1), nan(4, 1), 9321*ones(4, 1), nan(4, 2)]; ...            [8824+(0:3)'*124; 8826+(0:3)'*124'; 8827+(0:3)'*124] , ...            [9320*ones(12, 1), 187 * ones(12, 1)], 9321*ones(12, 1), nan(12, 2);...                    [9323+(0:3)'*124, 9320*ones(4, 1), nan(4, 1), 9321*ones(4, 1), nan(4, 2)]; ...            [9322+(0:3)'*124; 9324+(0:3)'*124'; 9325+(0:3)'*124] , ...            [9320*ones(12, 1), 187 * ones(12, 1)], 9321*ones(12, 1), nan(12, 2)];        refpls = [187 9320 9321 896];end    npulse = length(pulse);if isfield(scan, 'data') && isfield(scan.data, 'pulses')    dt = awgdata.xval(scan.data.pulses);    dt(isnan(dt)) = -1;else            %dt = [ 0 0:1e-3:40e-3 [ 0 0e-3:1e-3:10e-3 12e-3 15e-3:3e-3:21e-3 25e-3:5e-3:50e-3, .06:.01:.1 .12:.02:.2 .23:.03:.5 .55:.05:1]+0.041]*1e3;    %dt = [0 0e-3:1e-3:30e-3 35e-3:5e-3:50e-3, .06:.01:.1 .12:.02:.2 .23:.03:.5 .55:.05:1]*1e3;    %dt = [0 0e-3:1e-3:20e-3 22e-3:2e-3:30e-3 35e-3:5e-3:50e-3, .06:.01:.1 .12:.02:.2 .23:.03:.5 .55:.05:1]*1e3;    %dt=[0 0:0.8e-3:20e-3 [0 0:0.4e-3:20e-3]+20e-3 [0 0:0.2e-3:10e-3]+40e-3  [0 0:0.4e-3:20e-3]+50e-3 [0 0:0.8e-3:40e-3]+70e-3];    dt = dt(1:min(npulse, end));    dt(end+1:npulse) = nan;endm = mean(data(frames, :, cut:end), 3);% average values for same pulsem2 = mean(m, 1);refpls2 = [];for j = 1:length(refpls)    refpls2 = [refpls2; find(scan.data.pulses==refpls(j))];end%figure(2);%clf%plot(m2(refpls2));%gain = mean(mean(m2(refpls2(3:4, :)))) - mean(mean(m2(refpls2(1:2, :))));%ref = mean(mean(m2(refpls2(3:4, :))));%ref = mean(m2(refpls2), 2);%refpls%(ref-ref(1))'*1e6if nargin < 7    figure(5);    clf    subplot(211);    hold on;else    axes(ax(1));endc = 'rgbcmyk';d = zeros(npulse, 31);for i = 1:npulse    ind = find(scan.data.pulses == pulse(i));    pls = [];    for j = 1:length(ind);        brk = find([dt(ind(j)+1:end) < dt(ind(j):end-1), true], 1)-1;        pls = [pls; ind(j)+(0:brk)];    end    refpls = reftab(reftab(:, 1) == pulse(i), 2:end);    %refpls = refpls(isfinite(refpls));    refpls2 = [];    ref = nan(size(refpls));    for j = 1:length(refpls)                        ref(j) = mean(m2(scan.data.pulses==refpls(j)));    end    r1 = mean(ref(isfinite(ref) & [1 1 0 0 0]));    r2 = mean(ref(isfinite(ref) & [0 0 1 1 1]));    if isnan(r2)        r2 = r1+1e-6;        fprintf('1 muV gain for pulse %d\n', i);    end    fprintf('%d: %e\n', i, r2-r1);    %ref = mean(m2(refpls2(:)));    %plot(-ones(size(refpls2)), m2(refpls2)-ref, '.', dt(pls(1, :)), (m2(pls)-ref)./gain);    %plot( dt(pls(1, :)), (m2(pls)-ref)./gain + i, c(i));    d(i, :) = -(m2(pls)-r2)./(r2-r1);    t(i, :) = dt(pls(1, :));    plot(t(i, :), d(i, :) + 0*(i-1), c(i));    %r2-r1    lstr{i} = sprintf('%d', pulse(i));endth = title(file);set(th, 'Interpreter', 'none')legend(lstr{:});if nargin < 4 || isempty(scale)    return;endt3 = linspace(min(t(:, 1)), 0.8*max(t(:, end)), 1000);for i = 1:npulse    t2(i, :) = t(i, :) * scale(i, 3) + scale(i, 4);    d2(i, :) = (d(i, :) - scale(i, 2)) .* scale(i, 1) + scale(i, 2);    d3(i, :) = interp1(t2(i, :), d2(i, :), t3, 'spline');endif nargin < 7    figure(5);    subplot(212);    hold on;else    axes(ax(2));endif isempty(ypls) || ypls == 0    h = plot(t3, d3(1, :).^2, 'r', t2(1, :), d2(1, :).^2, 'r.',...        t3, d3(2, :).^2, 'g', t2(2, :), d2(2, :).^2, 'g.',...        t3, sqrt(sum(d3(1:2, :).^2)), 'k');    legend(h(1:2:5), 'X^2', 'Z^2', 'sqrt(X^2 + Z^2)')else    h = plot(t3, d3(1, :).^2, 'r', t2(1, :), d2(1, :).^2, 'r.',...        t3, d3(2, :).^2, 'g', t2(2, :), d2(2, :).^2, 'g.',...        t3, d3(ypls, :).^2, c(ypls), t2(ypls, :), d2(ypls, :).^2, [c(ypls), '.'],...        t3, sqrt(sum(d3([1:2 ypls], :).^2)), 'k');    legend(h(1:2:7), 'X^2', 'Z^2', 'Y^2', 'sqrt(X^2 + Y^2 + Z^2)')    figure(6);    clf    plot3(d3(1, :), d3(ypls, :), d3(2, :), ...        [0 mean(d3(1, :))], [0 mean(d3(ypls, :))], [0 mean(d3(2, :))], 'r');    % [0 d3(1, end)], [0 d3(2, end)], [0 d3(ypls, end)], 'r', ...    set(gca, 'DataAspectRatio', [1 1 1])endreturn;
