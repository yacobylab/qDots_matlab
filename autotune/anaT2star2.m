function [d, dd] = anaT2star2(files, frames, pulse, refpulse, cntrl, frames2)% anaT2star2(files, last, pulse, refpulse)global awgdata;    data = [];if ~iscell(files)    files = cellstr(files);endfor i = 1:length(files)    d = load(files{i}, 'data', 'scan');    data = cat(1, data, d.data{1});endif ndims(data) > 3     if nargin < 2 || isempty(frames)        frames = 1:find(isfinite(data(:, end, end, end)), 1, 'last');    end    data = permute(mean(data(frames, :, :, :), 1), [2 3 4 1]);    if nargin < 6        frames = 1:find(isfinite(data(:, end, end)), 1, 'last');    else         frames = frames2;    endelse    if nargin < 2 || isempty(frames)        frames = 1:find(isfinite(data(:, end, end)), 1, 'last');    endend%npulse = size(data, 2)/2;nsamp = size(data, 3);if abs(d.scan.loops(1).ramptime) < 1/32    cut = 4; % ignore data points before this one.else    cut = 10;end%if length(frames) == 1%    frames = 1:frames;%endif nargin < 3 || isempty(pulse)    pulse = 1:size(data, 2);endif nargin < 4 || isempty(refpulse)    refpulse = pulse(1);endif length(refpulse) == 1    refpulse = repmat(refpulse, size(pulse));endif nargin < 5    cntrl = '';endif ~isstr(cntrl)    offset = cntrl;    cntrl = '';else    offset = 0;endnpulse = length(pulse);if isfield(d.scan, 'data') && isfield(d.scan.data, 'pulses')    dt = awgdata.xval(d.scan.data.pulses(pulse));    dt(isnan(dt)) = -1;else            %dt = [ 0 0:1e-3:40e-3 [ 0 0e-3:1e-3:10e-3 12e-3 15e-3:3e-3:21e-3 25e-3:5e-3:50e-3, .06:.01:.1 .12:.02:.2 .23:.03:.5 .55:.05:1]+0.041]*1e3;    %dt = [0 0e-3:1e-3:30e-3 35e-3:5e-3:50e-3, .06:.01:.1 .12:.02:.2 .23:.03:.5 .55:.05:1]*1e3;    %dt = [0 0e-3:1e-3:20e-3 22e-3:2e-3:30e-3 35e-3:5e-3:50e-3, .06:.01:.1 .12:.02:.2 .23:.03:.5 .55:.05:1]*1e3;    %dt=[0 0:0.8e-3:20e-3 [0 0:0.4e-3:20e-3]+20e-3 [0 0:0.2e-3:10e-3]+40e-3  [0 0:0.4e-3:20e-3]+50e-3 [0 0:0.8e-3:40e-3]+70e-3];    dt = dt(1:min(npulse, end));    dt(end+1:npulse) = nan;endmt = permute(mean(data(frames, pulse, :), 1), [2 3 1]);rt = permute(mean(data(frames, refpulse, :), 1), [2 3 1]);% gives time dependence for each equivalent curve% average over valid times.m = mean(data(frames, pulse, cut:end), 3);r = mean(data(frames, refpulse, cut:end), 3);% average values for same pulsem2 = mean(m, 1);r2 = mean(r, 1);if nargout >= 1    if strfind(cntrl, 'raw')        d = m-r;        dd=data(frames, pulse, cut:end) - data(frames, refpulse, cut:end);    else        d = m2-r2;        dd = dt;    end    return;endbrk = [0 find(dt(2:end) < dt(1:end-1))];brk(end+1) = length(dt);c = 'rgbcmyk';figure(3);clfhold on;for i = 1:length(brk)-1    rng = brk(i)+1:brk(i+1);    plot(dt(rng), m2(rng)-r2(rng)+(i-1)*offset, ['.-', c(mod(i-1, 7)+1)]);endxlabel('\tau_M (ns)');ylabel('V_{QPC}')%title(''); %differencefprintf('%d tau_M sweeps averaged\n', length(frames));figure(4)%subplot(211)imagesc(m) %m-r%imagesc(abs(fft(m-r, [], 2)))xlabel('\tau_M (ns)')   %('pulse No.')ylabel('sweep No.')returnfigure(5);clfhold on;for i = 1:length(brk)-1    rng = brk(i)+1:brk(i+1);    rng = rng(dt(rng)>=0);    ft = abs(ifft(m2(rng)-r2(rng)));    plot((1:round(length(ft)/2)) ./ (max(dt(rng))- min(dt(rng))) * 4e3, ft(1:round(end/2))+i*.5e-7, ['.-', c(mod(i-1, 7)+1)]);endxlabel('f (MHz)')%plot(dt, m2-r2,'.-');%plot(dt, m2-r2, '.', x, ampest * (1-exp(-(x./tau).^2)), '--', ...%    x, ampest * (1-exp(-x./tau)), '-.');figure(3); hold on;subplot(311);%plot(dt, m2, dt, r2);errorbar(dt, m2-r2, std(m-r, '', 1)./sqrt(size(m, 1)), '.');title('Difference');xlabel('\tau_M (ns)');ylabel('V_{QPC}')%title('0 ns reference and measurement pulse');ampest = 1*(mt(end)-rt(end));tau = 10;subplot(312);x = linspace(0, dt(npulse), 1000);plot(dt, m2,'.-', dt, r2);xlabel('\tau_M (ns)');ylabel('V_{QPC}')title('Measurement and reference pulse');fprintf('%d tau_M sweeps averaged\n', length(frames));subplot(313);% subplot(212)% imagesc(r) %m-r% % %imagesc(abs(fft(m-r, [], 2)))% % xlabel('pulse No.')% ylabel('sweep No.')% title('Reference');returnsubplot(211);plot(linspace(0, 1, nsamp), mt, '', linspace(0, 1, nsamp), rt, 'b');xlabel('t');ylabel('V_{QPC}')title('Average time dependence of readout signal');subplot(212)plot(dt, std(m), dt, std(r), dt, std(m-r));xlabel('\tau_M (ns)');ylabel('std(V_{QPC})')title('Ensemble variation of readout signal')
